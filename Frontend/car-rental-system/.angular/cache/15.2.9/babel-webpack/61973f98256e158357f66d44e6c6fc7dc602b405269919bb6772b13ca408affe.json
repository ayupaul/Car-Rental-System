{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/user-service.service\";\nimport * as i2 from \"src/app/services/user-store.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction DashboardComponent_option_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const maker_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", maker_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(maker_r2);\n  }\n}\nfunction DashboardComponent_option_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const model_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", model_r3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(model_r3);\n  }\n}\nexport class DashboardComponent {\n  // Implement your filterData function here to filter the data based on selected filters\n  filterData() {\n    // Filter your data based on selectedMaker, selectedModel, and selectedPrice\n    const filteredData = {\n      maker: \"\",\n      model: \"\",\n      rentedPrice: \"\"\n    };\n  }\n  constructor(userService, userStoreService) {\n    this.userService = userService;\n    this.userStoreService = userStoreService;\n    this.selectedMaker = '';\n    this.selectedModel = '';\n    this.selectedPrice = '';\n    this.makers = ['Maruti Suzuki', 'Ford']; // Replace with your maker data\n    this.models = ['Maruti Suzuki Swift', 'Maruti Suzuki Vitara Brezza', 'Ford Mustang', 'Ford Escape']; // Replace with your model data\n    const userPayload = this.userService.decodedToken();\n    this.userStoreService.setData(userPayload);\n  }\n}\n_class = DashboardComponent;\n_class.ɵfac = function DashboardComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.UserServiceService), i0.ɵɵdirectiveInject(i2.UserStoreService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-dashboard\"]],\n  decls: 34,\n  vars: 5,\n  consts: [[\"for\", \"maker\"], [\"id\", \"maker\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"model\"], [\"id\", \"model\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"price\"], [\"id\", \"price\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"50$\"], [\"value\", \"60$\"], [\"value\", \"70$\"], [\"value\", \"80$\"], [\"value\", \"90$\"], [\"value\", \"100$\"], [3, \"click\"], [3, \"value\"]],\n  template: function DashboardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"label\", 0);\n      i0.ɵɵtext(2, \"Maker:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"select\", 1);\n      i0.ɵɵlistener(\"ngModelChange\", function DashboardComponent_Template_select_ngModelChange_3_listener($event) {\n        return ctx.selectedMaker = $event;\n      });\n      i0.ɵɵelementStart(4, \"option\", 2);\n      i0.ɵɵtext(5, \"All\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(6, DashboardComponent_option_6_Template, 2, 2, \"option\", 3);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"div\")(8, \"label\", 4);\n      i0.ɵɵtext(9, \"Model:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"select\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function DashboardComponent_Template_select_ngModelChange_10_listener($event) {\n        return ctx.selectedModel = $event;\n      });\n      i0.ɵɵelementStart(11, \"option\", 2);\n      i0.ɵɵtext(12, \"All\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(13, DashboardComponent_option_13_Template, 2, 2, \"option\", 3);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"div\")(15, \"label\", 6);\n      i0.ɵɵtext(16, \"Price:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"select\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function DashboardComponent_Template_select_ngModelChange_17_listener($event) {\n        return ctx.selectedPrice = $event;\n      });\n      i0.ɵɵelementStart(18, \"option\", 2);\n      i0.ɵɵtext(19, \"All\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"option\", 8);\n      i0.ɵɵtext(21, \"50$\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"option\", 9);\n      i0.ɵɵtext(23, \"60$\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"option\", 10);\n      i0.ɵɵtext(25, \"70$\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"option\", 11);\n      i0.ɵɵtext(27, \"80$\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"option\", 12);\n      i0.ɵɵtext(29, \"90$\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"option\", 13);\n      i0.ɵɵtext(31, \"100$\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(32, \"button\", 14);\n      i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_32_listener() {\n        return ctx.filterData();\n      });\n      i0.ɵɵtext(33, \"Filter\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.selectedMaker);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.makers);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.selectedModel);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.models);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.selectedPrice);\n    }\n  },\n  dependencies: [i3.NgForOf, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgModel],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;;IAIMA,kCAAqD;IAAAA,YAAW;IAAAA,iBAAS;;;;IAApCA,gCAAe;IAACA,eAAW;IAAXA,8BAAW;;;;;IAQhEA,kCAAqD;IAAAA,YAAW;IAAAA,iBAAS;;;;IAApCA,gCAAe;IAACA,eAAW;IAAXA,8BAAW;;;ACHtE,OAAM,MAAOC,kBAAkB;EAO7B;EACAC,UAAU;IACR;IACD,MAAMC,YAAY,GAAC;MAACC,KAAK,EAAC,EAAE;MAACC,KAAK,EAAC,EAAE;MAACC,WAAW,EAAC;IAAE,CAAC;EAEtD;EACAC,YACUC,WAA+B,EAC/BC,gBAAkC;IADlC,gBAAW,GAAXD,WAAW;IACX,qBAAgB,GAAhBC,gBAAgB;IAd1B,kBAAa,GAAW,EAAE;IAC1B,kBAAa,GAAW,EAAE;IAC1B,kBAAa,GAAW,EAAE;IAC1B,WAAM,GAAa,CAAC,eAAe,EAAE,MAAM,CAAC,CAAC,CAAC;IAC9C,WAAM,GAAa,CAAC,qBAAqB,EAAE,6BAA6B,EAAE,cAAc,EAAC,aAAa,CAAC,CAAC,CAAC;IAYvG,MAAMC,WAAW,GAAG,IAAI,CAACF,WAAW,CAACG,YAAY,EAAE;IACnD,IAAI,CAACF,gBAAgB,CAACG,OAAO,CAACF,WAAW,CAAC;EAC5C;;SAnBWT,kBAAkB;;mBAAlBA,MAAkB;AAAA;;QAAlBA,MAAkB;EAAAY;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDT/BjB,2BAAK;MACkBA,sBAAM;MAAAA,iBAAQ;MACjCA,iCAA+C;MAA5BA;QAAA;MAAA,EAA2B;MAC5CA,iCAAiB;MAAAA,mBAAG;MAAAA,iBAAS;MAC7BA,yEAAyE;MAC3EA,iBAAS;MAGXA,2BAAK;MACgBA,sBAAM;MAAAA,iBAAQ;MACjCA,kCAA+C;MAA5BA;QAAA;MAAA,EAA2B;MAC5CA,kCAAiB;MAAAA,oBAAG;MAAAA,iBAAS;MAC7BA,2EAAyE;MAC3EA,iBAAS;MAGXA,4BAAK;MACgBA,uBAAM;MAAAA,iBAAQ;MACjCA,kCAA+C;MAA5BA;QAAA;MAAA,EAA2B;MAC5CA,kCAAiB;MAAAA,oBAAG;MAAAA,iBAAS;MAC7BA,kCAAoB;MAAAA,oBAAG;MAAAA,iBAAS;MAChCA,kCAAoB;MAAAA,oBAAG;MAAAA,iBAAS;MAChCA,mCAAoB;MAAAA,oBAAG;MAAAA,iBAAS;MAChCA,mCAAoB;MAAAA,oBAAG;MAAAA,iBAAS;MAChCA,mCAAoB;MAAAA,oBAAG;MAAAA,iBAAS;MAChCA,mCAAqB;MAAAA,qBAAI;MAAAA,iBAAS;MAKtCA,mCAA+B;MAAvBA;QAAA,OAASkB,gBAAY;MAAA,EAAC;MAAClB,uBAAM;MAAAA,iBAAS;;;MA5BzBA,eAA2B;MAA3BA,2CAA2B;MAElBA,eAAS;MAATA,oCAAS;MAMlBA,eAA2B;MAA3BA,2CAA2B;MAElBA,eAAS;MAATA,oCAAS;MAMlBA,eAA2B;MAA3BA,2CAA2B","names":["i0","DashboardComponent","filterData","filteredData","maker","model","rentedPrice","constructor","userService","userStoreService","userPayload","decodedToken","setData","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\ayushpal\\Dotnet-MiniAssignment\\Frontend\\car-rental-system\\src\\app\\components\\dashboard\\dashboard.component.html","C:\\Users\\ayushpal\\Dotnet-MiniAssignment\\Frontend\\car-rental-system\\src\\app\\components\\dashboard\\dashboard.component.ts"],"sourcesContent":["<div>\n    <label for=\"maker\">Maker:</label>\n    <select id=\"maker\" [(ngModel)]=\"selectedMaker\">\n      <option value=\"\">All</option>\n      <option *ngFor=\"let maker of makers\" [value]=\"maker\">{{ maker }}</option>\n    </select>\n  </div>\n  \n  <div>\n    <label for=\"model\">Model:</label>\n    <select id=\"model\" [(ngModel)]=\"selectedModel\">\n      <option value=\"\">All</option>\n      <option *ngFor=\"let model of models\" [value]=\"model\">{{ model }}</option>\n    </select>\n  </div>\n  \n  <div>\n    <label for=\"price\">Price:</label>\n    <select id=\"price\" [(ngModel)]=\"selectedPrice\">\n      <option value=\"\">All</option>\n      <option value=\"50$\">50$</option>\n      <option value=\"60$\">60$</option>\n      <option value=\"70$\">70$</option>\n      <option value=\"80$\">80$</option>\n      <option value=\"90$\">90$</option>\n      <option value=\"100$\">100$</option>\n      <!-- Add more price ranges as needed -->\n    </select>\n  </div>\n  \n  <button (click)=\"filterData()\">Filter</button>\n  \n","import { Component } from '@angular/core';\nimport { UserServiceService } from 'src/app/services/user-service.service';\nimport { UserStoreService } from 'src/app/services/user-store.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css'],\n})\nexport class DashboardComponent {\n  selectedMaker: string = '';\n  selectedModel: string = '';\n  selectedPrice: string = '';\n  makers: string[] = ['Maruti Suzuki', 'Ford']; // Replace with your maker data\n  models: string[] = ['Maruti Suzuki Swift', 'Maruti Suzuki Vitara Brezza', 'Ford Mustang','Ford Escape']; // Replace with your model data\n\n  // Implement your filterData function here to filter the data based on selected filters\n  filterData() {\n    // Filter your data based on selectedMaker, selectedModel, and selectedPrice\n   const filteredData={maker:\"\",model:\"\",rentedPrice:\"\"};\n   \n  }\n  constructor(\n    private userService: UserServiceService,\n    private userStoreService: UserStoreService\n  ) {\n    const userPayload = this.userService.decodedToken();\n    this.userStoreService.setData(userPayload);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}