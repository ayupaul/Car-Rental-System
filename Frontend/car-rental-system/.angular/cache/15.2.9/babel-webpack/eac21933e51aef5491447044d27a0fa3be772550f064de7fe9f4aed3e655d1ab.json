{"ast":null,"code":"var _class;\nimport { forkJoin } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/car.service\";\nimport * as i2 from \"src/app/services/user-service.service\";\nexport class AllAgreementsComponent {\n  constructor(carService, userService) {\n    this.carService = carService;\n    this.userService = userService;\n  }\n  ngOnInit() {\n    this.carService.getAllAgreements().subscribe(res => {\n      this.allAgreements = res;\n      const observables = this.allAgreements.map(agreement, any => this.userService.getUser(agreement.id));\n      forkJoin(observables).subscribe(userResponses => {\n        this.allAgreementsDetails = this.allAgreements.map((agreement, index) => ({\n          ...agreement,\n          userName: userResponses[index].name // Replace with the actual property that holds the userName\n        }));\n      });\n\n      console.log(this.allAgreementsDetails);\n    }, error => {\n      console.log(error);\n    });\n  }\n}\n_class = AllAgreementsComponent;\n_class.ɵfac = function AllAgreementsComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.CarService), i0.ɵɵdirectiveInject(i2.UserServiceService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-all-agreements\"]],\n  decls: 2,\n  vars: 0,\n  template: function AllAgreementsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"all-agreements works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";AACA,SAASA,QAAQ,QAAa,MAAM;;;;AASpC,OAAM,MAAOC,sBAAsB;EAGjCC,YAAoBC,UAAqB,EAASC,WAA8B;IAA5D,eAAU,GAAVD,UAAU;IAAoB,gBAAW,GAAXC,WAAW;EAAqB;EAClFC,QAAQ;IACN,IAAI,CAACF,UAAU,CAACG,gBAAgB,EAAE,CAACC,SAAS,CAAEC,GAAG,IAAG;MAClD,IAAI,CAACC,aAAa,GAACD,GAAG;MACtB,MAAME,WAAW,GAAG,IAAI,CAACD,aAAa,CAACE,GAAG,CAACC,SAAS,EAACC,GAAG,IACtD,IAAI,CAACT,WAAW,CAACU,OAAO,CAACF,SAAS,CAACG,EAAE,CAAC,CACvC;MAEDf,QAAQ,CAACU,WAAW,CAAC,CAACH,SAAS,CAAES,aAAkB,IAAI;QACrD,IAAI,CAACC,oBAAoB,GAAG,IAAI,CAACR,aAAa,CAACE,GAAG,CAAC,CAACC,SAAa,EAAEM,KAAS,MAAM;UAChF,GAAGN,SAAS;UACZO,QAAQ,EAAEH,aAAa,CAACE,KAAK,CAAC,CAACE,IAAI,CAAE;SACtC,CAAC,CAAC;MACL,CAAC,CAAC;;MAIFC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACL,oBAAoB,CAAC;IACxC,CAAC,EAAEM,KAAK,IAAG;MACTF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;IACpB,CAAC,CAAC;EACJ;;SAxBWtB,sBAAsB;;mBAAtBA,MAAsB;AAAA;;QAAtBA,MAAsB;EAAAuB;EAAAC;EAAAC;EAAAC;IAAA;MCVnCC,yBAAG;MAAAA,qCAAqB;MAAAA,iBAAI","names":["forkJoin","AllAgreementsComponent","constructor","carService","userService","ngOnInit","getAllAgreements","subscribe","res","allAgreements","observables","map","agreement","any","getUser","id","userResponses","allAgreementsDetails","index","userName","name","console","log","error","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["C:\\Users\\ayushpal\\Dotnet-MiniAssignment\\Frontend\\car-rental-system\\src\\app\\components\\all-agreements\\all-agreements.component.ts","C:\\Users\\ayushpal\\Dotnet-MiniAssignment\\Frontend\\car-rental-system\\src\\app\\components\\all-agreements\\all-agreements.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { forkJoin, map } from 'rxjs';\nimport { CarService } from 'src/app/services/car.service';\nimport { UserServiceService } from 'src/app/services/user-service.service';\n\n@Component({\n  selector: 'app-all-agreements',\n  templateUrl: './all-agreements.component.html',\n  styleUrls: ['./all-agreements.component.css']\n})\nexport class AllAgreementsComponent implements OnInit {\n  allAgreements:any\n  allAgreementsDetails:any\n  constructor(private carService:CarService,private userService:UserServiceService){}\n  ngOnInit(): void {\n    this.carService.getAllAgreements().subscribe((res)=>{\n      this.allAgreements=res;\n      const observables = this.allAgreements.map(agreement:any =>\n        this.userService.getUser(agreement.id)\n      );\n    \n      forkJoin(observables).subscribe((userResponses: any) => {\n        this.allAgreementsDetails = this.allAgreements.map((agreement:any, index:any) => ({\n          ...agreement,\n          userName: userResponses[index].name  // Replace with the actual property that holds the userName\n        }));\n      });\n      \n        \n    \n      console.log(this.allAgreementsDetails);\n    },(error)=>{\n      console.log(error);\n    })\n  }\n\n}\n","<p>all-agreements works!</p>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}