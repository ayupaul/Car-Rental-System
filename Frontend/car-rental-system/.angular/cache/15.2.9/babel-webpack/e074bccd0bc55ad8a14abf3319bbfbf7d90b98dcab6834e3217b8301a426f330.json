{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CarService {\n  constructor(http) {\n    this.http = http;\n    this.Backend = \"http://localhost:5095/api/Car\";\n  }\n  //search car\n  searchCar(carDetails) {\n    return this.http.post(`${this.Backend}/search`, carDetails);\n  }\n  //check car already booked\n  checkBooking(carAgreementDetails) {\n    return this.http.post(`${this.Backend}/alreadyBooked`, carAgreementDetails);\n  }\n  //get car by id\n  getCarById(id) {\n    return this.http.get(`${this.Backend}/carById/${id}`);\n  }\n  //book car\n  bookCar(carAgreementDetails) {\n    return this.http.post(`${this.Backend}/bookCar`, carAgreementDetails);\n  }\n  //get agreements based on user id\n  getAgreement(id) {\n    return this.http.get(`${this.Backend}/getAgreements/${id}`);\n  }\n  //request for return \n  requestForReturn(id) {\n    return this.http.put(`${this.Backend}/requestForReturn/${id}`, null);\n  }\n  //get all agreements\n  getAllAgreements() {\n    return this.http.get(`${this.Backend}/getAllAgreements`);\n  }\n  //approve return for request\n  approve(id) {\n    return this.http.delete(`${this.Backend}/approveReturn/${id}`);\n  }\n  //add car \n  addCar(carDetails) {\n    return this.http.post(`${this.Backend}/addCar`, carDetails);\n  }\n}\n_class = CarService;\n_class.ɵfac = function CarService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;AAOA,OAAM,MAAOA,UAAU;EAErBC,YAAoBC,IAAe;IAAf,SAAI,GAAJA,IAAI;IADxB,YAAO,GAAQ,+BAA+B;EACP;EACvC;EACAC,SAAS,CAACC,UAAc;IACtB,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAC,GAAG,IAAI,CAACC,OAAO,SAAS,EAACF,UAAU,CAAC;EAC5D;EACA;EACAG,YAAY,CAACC,mBAAuB;IAClC,OAAO,IAAI,CAACN,IAAI,CAACG,IAAI,CAAC,GAAG,IAAI,CAACC,OAAO,gBAAgB,EAACE,mBAAmB,CAAC;EAC5E;EACA;EACAC,UAAU,CAACC,EAAM;IACf,OAAO,IAAI,CAACR,IAAI,CAACS,GAAG,CAAC,GAAG,IAAI,CAACL,OAAO,YAAYI,EAAE,EAAE,CAAC;EACvD;EACA;EACAE,OAAO,CAACJ,mBAAuB;IAC7B,OAAO,IAAI,CAACN,IAAI,CAACG,IAAI,CAAC,GAAG,IAAI,CAACC,OAAO,UAAU,EAACE,mBAAmB,CAAC;EACtE;EACA;EACAK,YAAY,CAACH,EAAM;IACjB,OAAO,IAAI,CAACR,IAAI,CAACS,GAAG,CAAC,GAAG,IAAI,CAACL,OAAO,kBAAkBI,EAAE,EAAE,CAAC;EAC7D;EACA;EACAI,gBAAgB,CAACJ,EAAM;IACrB,OAAO,IAAI,CAACR,IAAI,CAACa,GAAG,CAAC,GAAG,IAAI,CAACT,OAAO,qBAAqBI,EAAE,EAAE,EAAC,IAAI,CAAC;EACrE;EACA;EACAM,gBAAgB;IACd,OAAO,IAAI,CAACd,IAAI,CAACS,GAAG,CAAC,GAAG,IAAI,CAACL,OAAO,mBAAmB,CAAC;EAC1D;EACA;EACAW,OAAO,CAACP,EAAM;IACZ,OAAO,IAAI,CAACR,IAAI,CAACgB,MAAM,CAAC,GAAG,IAAI,CAACZ,OAAO,kBAAkBI,EAAE,EAAE,CAAC;EAChE;EACA;EACAS,MAAM,CAACf,UAAc;IACnB,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAC,GAAG,IAAI,CAACC,OAAO,SAAS,EAACF,UAAU,CAAC;EAC5D;;SAtCWJ,UAAU;;mBAAVA,MAAU;AAAA;;SAAVA,MAAU;EAAAoB,SAAVpB,MAAU;EAAAqB,YAFT;AAAM","names":["CarService","constructor","http","searchCar","carDetails","post","Backend","checkBooking","carAgreementDetails","getCarById","id","get","bookCar","getAgreement","requestForReturn","put","getAllAgreements","approve","delete","addCar","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\ayushpal\\Dotnet-MiniAssignment\\Frontend\\car-rental-system\\src\\app\\services\\car.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CarService {\n  Backend:string=\"http://localhost:5095/api/Car\"\n  constructor(private http:HttpClient) { }\n  //search car\n  searchCar(carDetails:any):Observable<any>{\n    return this.http.post(`${this.Backend}/search`,carDetails);\n  }\n  //check car already booked\n  checkBooking(carAgreementDetails:any):Observable<any>{\n    return this.http.post(`${this.Backend}/alreadyBooked`,carAgreementDetails);\n  }\n  //get car by id\n  getCarById(id:any):Observable<any>{\n    return this.http.get(`${this.Backend}/carById/${id}`);\n  }\n  //book car\n  bookCar(carAgreementDetails:any):Observable<any>{\n    return this.http.post(`${this.Backend}/bookCar`,carAgreementDetails);\n  }\n  //get agreements based on user id\n  getAgreement(id:any):Observable<any>{\n    return this.http.get(`${this.Backend}/getAgreements/${id}`);\n  }\n  //request for return \n  requestForReturn(id:any):Observable<any>{\n    return this.http.put(`${this.Backend}/requestForReturn/${id}`,null);\n  }\n  //get all agreements\n  getAllAgreements():Observable<any>{\n    return this.http.get(`${this.Backend}/getAllAgreements`);\n  }\n  //approve return for request\n  approve(id:any):Observable<any>{\n    return this.http.delete(`${this.Backend}/approveReturn/${id}`);\n  }\n  //add car \n  addCar(carDetails:any):Observable<any>{\n    return this.http.post(`${this.Backend}/addCar`,carDetails);\n  }\n  //edit car\n  updateCar()\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}