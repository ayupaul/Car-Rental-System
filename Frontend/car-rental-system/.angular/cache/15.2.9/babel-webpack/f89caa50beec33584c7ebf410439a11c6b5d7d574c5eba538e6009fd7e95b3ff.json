{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { DatePipe } from '@angular/common';\nimport { Component } from '@angular/core';\nlet DashboardComponent = class DashboardComponent {\n  filterData() {\n    const filteredData = {\n      maker: null,\n      model: null,\n      rentalPrice: null\n    };\n    filteredData.maker = this.selectedMaker;\n    filteredData.model = this.selectedModel;\n    filteredData.rentalPrice = this.selectedPrice;\n    this.carService.searchCar(filteredData).subscribe(res => {\n      console.log(res);\n      this.carDetails = res;\n      this.carDetailswithDate = this.carDetails.map(car => ({\n        ...car,\n        startDate: this.startDate,\n        endDate: this.endDate\n      }));\n    }, error => {\n      console.log(error);\n    });\n  }\n  constructor(userService, userStoreService, carService, route) {\n    this.userService = userService;\n    this.userStoreService = userStoreService;\n    this.carService = carService;\n    this.route = route;\n    this.none = null;\n    this.selectedMaker = null;\n    this.selectedModel = null;\n    this.selectedPrice = null;\n    this.makers = ['Maruti Suzuki', 'Ford'];\n    this.models = ['Maruti Suzuki Swift', 'Maruti Suzuki Vitara Brezza', 'Ford Mustang', 'Ford Escape']; // Replace with your model data\n    const userPayload = this.userService.decodedToken();\n    this.userStoreService.setData(userPayload);\n    this.getRole = this.userService.getRoleFromToken();\n    this.userStoreService.setData(this.getRole);\n    const datePipe = new DatePipe('en-US');\n    this.currentDate = datePipe.transform(new Date(), 'yyyy-MM-dd');\n  }\n  onBook(carId, startDate, endDate) {\n    const startDates = new Date(startDate);\n    const endDates = new Date(endDate);\n    const carAgreementDetails = {\n      startDate: \"\",\n      endDate: \"\",\n      carId: 0\n    };\n    carAgreementDetails.startDate = startDate;\n    carAgreementDetails.endDate = endDate;\n    carAgreementDetails.carId = carId;\n    this.carService.checkBooking(carAgreementDetails).subscribe(res => {\n      if (res === true) {\n        alert(\"Car is already booked in the selected date\");\n      } else {\n        this.route.navigate([\"rental-agreement\", carId, startDate, endDate]);\n      }\n    }, error => {\n      console.log(error);\n    });\n  }\n};\nDashboardComponent = __decorate([Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})], DashboardComponent);\nexport { DashboardComponent };","map":{"version":3,"mappings":";AAAA,SAASA,QAAQ,QAAQ,iBAAiB;AAC1C,SAASC,SAAS,QAAQ,eAAe;AAWlC,IAAMC,kBAAkB,GAAxB,MAAMA,kBAAkB;EAe7BC,UAAU;IAET,MAAMC,YAAY,GAAC;MAACC,KAAK,EAAC,IAAI;MAACC,KAAK,EAAC,IAAI;MAACC,WAAW,EAAC;IAAI,CAAC;IAC3DH,YAAY,CAACC,KAAK,GAAC,IAAI,CAACG,aAAa;IACrCJ,YAAY,CAACE,KAAK,GAAC,IAAI,CAACG,aAAa;IACrCL,YAAY,CAACG,WAAW,GAAC,IAAI,CAACG,aAAa;IAC3C,IAAI,CAACC,UAAU,CAACC,SAAS,CAACR,YAAY,CAAC,CAACS,SAAS,CAAEC,GAAG,IAAG;MACxDC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAChB,IAAI,CAACG,UAAU,GAACH,GAAG;MACnB,IAAI,CAACI,kBAAkB,GAAC,IAAI,CAACD,UAAU,CAACE,GAAG,CAAEC,GAAO,KAAI;QACtD,GAAGA,GAAG;QAACC,SAAS,EAAC,IAAI,CAACA,SAAS;QAACC,OAAO,EAAC,IAAI,CAACA;OAC9C,CAAC,CAAC;IACJ,CAAC,EAAEC,KAAK,IAAG;MACVR,OAAO,CAACC,GAAG,CAACO,KAAK,CAAC;IACnB,CAAC,CAAC;EACH;EACAC,YACUC,WAA+B,EAC/BC,gBAAkC,EAClCf,UAAqB,EACrBgB,KAAY;IAHZ,gBAAW,GAAXF,WAAW;IACX,qBAAgB,GAAhBC,gBAAgB;IAChB,eAAU,GAAVf,UAAU;IACV,UAAK,GAALgB,KAAK;IAlCf,SAAI,GAAC,IAAI;IAOT,kBAAa,GAAQ,IAAI;IACzB,kBAAa,GAAQ,IAAI;IACzB,kBAAa,GAAM,IAAI;IACvB,WAAM,GAAa,CAAC,eAAe,EAAE,MAAM,CAAC;IAC5C,WAAM,GAAa,CAAC,qBAAqB,EAAE,6BAA6B,EAAE,cAAc,EAAC,aAAa,CAAC,CAAC,CAAC;IA0BvG,MAAMC,WAAW,GAAG,IAAI,CAACH,WAAW,CAACI,YAAY,EAAE;IACnD,IAAI,CAACH,gBAAgB,CAACI,OAAO,CAACF,WAAW,CAAC;IAC1C,IAAI,CAACG,OAAO,GAAC,IAAI,CAACN,WAAW,CAACO,gBAAgB,EAAE;IAChD,IAAI,CAACN,gBAAgB,CAACI,OAAO,CAAC,IAAI,CAACC,OAAO,CAAC;IAC3C,MAAME,QAAQ,GAAG,IAAIjC,QAAQ,CAAC,OAAO,CAAC;IACtC,IAAI,CAACkC,WAAW,GAACD,QAAQ,CAACE,SAAS,CAAC,IAAIC,IAAI,EAAE,EAAC,YAAY,CAAC;EAE9D;EACDC,MAAM,CAACC,KAAS,EAACjB,SAAa,EAACC,OAAW;IACzC,MAAMiB,UAAU,GAAC,IAAIH,IAAI,CAACf,SAAS,CAAC;IACpC,MAAMmB,QAAQ,GAAC,IAAIJ,IAAI,CAACd,OAAO,CAAC;IAChC,MAAMmB,mBAAmB,GAAC;MAACpB,SAAS,EAAC,EAAE;MAACC,OAAO,EAAC,EAAE;MAACgB,KAAK,EAAC;IAAC,CAAC;IAC3DG,mBAAmB,CAACpB,SAAS,GAACA,SAAS;IACvCoB,mBAAmB,CAACnB,OAAO,GAACA,OAAO;IACnCmB,mBAAmB,CAACH,KAAK,GAACA,KAAK;IAC/B,IAAI,CAAC3B,UAAU,CAAC+B,YAAY,CAACD,mBAAmB,CAAC,CAAC5B,SAAS,CAAEC,GAAG,IAAG;MACjE,IAAGA,GAAG,KAAG,IAAI,EAAC;QACZ6B,KAAK,CAAC,4CAA4C,CAAC;OACpD,MACG;QACF,IAAI,CAAChB,KAAK,CAACiB,QAAQ,CAAC,CAAC,kBAAkB,EAACN,KAAK,EAACjB,SAAS,EAACC,OAAO,CAAC,CAAC;;IAErE,CAAC,EAAEC,KAAK,IAAG;MACTR,OAAO,CAACC,GAAG,CAACO,KAAK,CAAC;IACpB,CAAC,CAAC;EAEH;CACA;AAjEYrB,kBAAkB,eAL9BD,SAAS,CAAC;EACT4C,QAAQ,EAAE,eAAe;EACzBC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAAC,2BAA2B;CACxC,CAAC,GACW7C,kBAAkB,CAiE9B;SAjEYA,kBAAkB","names":["DatePipe","Component","DashboardComponent","filterData","filteredData","maker","model","rentalPrice","selectedMaker","selectedModel","selectedPrice","carService","searchCar","subscribe","res","console","log","carDetails","carDetailswithDate","map","car","startDate","endDate","error","constructor","userService","userStoreService","route","userPayload","decodedToken","setData","getRole","getRoleFromToken","datePipe","currentDate","transform","Date","onBook","carId","startDates","endDates","carAgreementDetails","checkBooking","alert","navigate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\ayushpal\\Dotnet-MiniAssignment\\Frontend\\car-rental-system\\src\\app\\components\\dashboard\\dashboard.component.ts"],"sourcesContent":["import { DatePipe } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CarService } from 'src/app/services/car.service';\nimport { UserServiceService } from 'src/app/services/user-service.service';\nimport { UserStoreService } from 'src/app/services/user-store.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css'],\n})\nexport class DashboardComponent {\n  none=null\n  carDetails:any\n  startDate:any\n  endDate:any\n  getRole:any\n  carDetailswithDate:any\n  currentDate:any\n  selectedMaker: any = null;\n  selectedModel: any = null;\n  selectedPrice: any=null;\n  makers: string[] = ['Maruti Suzuki', 'Ford']; \n  models: string[] = ['Maruti Suzuki Swift', 'Maruti Suzuki Vitara Brezza', 'Ford Mustang','Ford Escape']; // Replace with your model data\n\n  \n  filterData() {\n\n   const filteredData={maker:null,model:null,rentalPrice:null};\n   filteredData.maker=this.selectedMaker;\n   filteredData.model=this.selectedModel;\n   filteredData.rentalPrice=this.selectedPrice;\n   this.carService.searchCar(filteredData).subscribe((res)=>{\n    console.log(res);\n    this.carDetails=res;\n    this.carDetailswithDate=this.carDetails.map((car:any)=>({\n      ...car,startDate:this.startDate,endDate:this.endDate\n    }))\n   },(error)=>{\n    console.log(error);\n   })\n  }\n  constructor(\n    private userService: UserServiceService,\n    private userStoreService: UserStoreService,\n    private carService:CarService,\n    private route:Router,\n  \n  ) {\n    const userPayload = this.userService.decodedToken();\n    this.userStoreService.setData(userPayload);\n    this.getRole=this.userService.getRoleFromToken();\n    this.userStoreService.setData(this.getRole);\n    const datePipe = new DatePipe('en-US');\n    this.currentDate=datePipe.transform(new Date(),'yyyy-MM-dd');\n  \n  }\n onBook(carId:any,startDate:any,endDate:any){\n  const startDates=new Date(startDate);\n  const endDates=new Date(endDate);\n  const carAgreementDetails={startDate:\"\",endDate:\"\",carId:0}\n  carAgreementDetails.startDate=startDate;\n  carAgreementDetails.endDate=endDate;\n  carAgreementDetails.carId=carId;\n  this.carService.checkBooking(carAgreementDetails).subscribe((res)=>{\n    if(res===true){\n      alert(\"Car is already booked in the selected date\");\n    }\n    else{\n      this.route.navigate([\"rental-agreement\",carId,startDate,endDate]);\n    }\n  },(error)=>{\n    console.log(error);\n  })\n  \n }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}