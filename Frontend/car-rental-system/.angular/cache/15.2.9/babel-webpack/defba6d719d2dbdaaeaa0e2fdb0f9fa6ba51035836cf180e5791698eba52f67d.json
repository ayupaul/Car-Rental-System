{"ast":null,"code":"var _class;\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/car.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction AddCarComponent_span_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 12);\n    i0.ɵɵtext(1, \"Maker Field is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddCarComponent_span_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 12);\n    i0.ɵɵtext(1, \"Model Field is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddCarComponent_span_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 12);\n    i0.ɵɵtext(1, \"Rental Price Field is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class AddCarComponent {\n  constructor(formBuilder, carService, route, currencyPipe) {\n    this.formBuilder = formBuilder;\n    this.carService = carService;\n    this.route = route;\n    this.currencyPipe = currencyPipe;\n    this.carForm = this.formBuilder.group({\n      maker: ['', Validators.required],\n      model: ['', Validators.required],\n      rentalPrice: ['', Validators.required]\n    });\n  }\n  onAdd() {\n    const modifiedPrice = this.carForm.get('rentalPrice')?.value;\n    const formattedPrice = this.currencyPipe.transform(modifiedPrice, 'USD', 'symbol-narrow', '1.2-2');\n    console.log(formattedPrice);\n    // this.carService.addCar(this.carForm.value).subscribe((res)=>{\n    //   console.log(res);\n    // },(error)=>{\n    //   console.log(error);\n    // })\n  }\n}\n_class = AddCarComponent;\n_class.ɵfac = function AddCarComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.CarService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.CurrencyPipe));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-add-car\"]],\n  decls: 20,\n  vars: 5,\n  consts: [[1, \"base\"], [1, \"login\"], [3, \"formGroup\", \"submit\"], [1, \"mb-3\"], [\"for\", \"Maker\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"Maker\", \"placeholder\", \"Enter Maker\", \"aria-describedby\", \"maker\", \"formControlName\", \"maker\", 1, \"form-control\"], [\"style\", \"color: red;\", 4, \"ngIf\"], [\"for\", \"Model\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"Model\", \"placeholder\", \"Enter Maker\", \"aria-describedby\", \"Model\", \"formControlName\", \"model\", 1, \"form-control\"], [\"for\", \"RentalPrice\", 1, \"form-label\"], [\"type\", \"number\", \"id\", \"RentalPrice\", \"placeholder\", \"Enter Rental Price\", \"aria-describedby\", \"rentalPrice\", \"formControlName\", \"rentalPrice\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [2, \"color\", \"red\"]],\n  template: function AddCarComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\", 2);\n      i0.ɵɵlistener(\"submit\", function AddCarComponent_Template_form_submit_2_listener() {\n        return ctx.onAdd();\n      });\n      i0.ɵɵelementStart(3, \"div\", 3)(4, \"label\", 4);\n      i0.ɵɵtext(5, \"Maker\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"input\", 5);\n      i0.ɵɵtemplate(7, AddCarComponent_span_7_Template, 2, 0, \"span\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 3)(9, \"label\", 7);\n      i0.ɵɵtext(10, \"Model\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"input\", 8);\n      i0.ɵɵtemplate(12, AddCarComponent_span_12_Template, 2, 0, \"span\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"div\", 3)(14, \"label\", 9);\n      i0.ɵɵtext(15, \"Rental Price\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(16, \"input\", 10);\n      i0.ɵɵtemplate(17, AddCarComponent_span_17_Template, 2, 0, \"span\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"button\", 11);\n      i0.ɵɵtext(19, \"Submit\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.carForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.carForm.controls[\"maker\"].dirty && ctx.carForm.hasError(\"required\", \"maker\"));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.carForm.controls[\"model\"].dirty && ctx.carForm.hasError(\"required\", \"model\"));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.carForm.controls[\"rentalPrice\"].dirty && ctx.carForm.hasError(\"required\", \"rentalPrice\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", ctx.carForm.invalid);\n    }\n  },\n  dependencies: [i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\".base[_ngcontent-%COMP%] {\\r\\n    display: flex;\\r\\n    justify-content: center; \\r\\n    align-items: center; \\r\\n    height: 100vh; \\r\\n  }\\r\\n  .form-label[_ngcontent-%COMP%]{\\r\\n    color: aliceblue;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9hZGQtY2FyL2FkZC1jYXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGFBQWE7SUFDYix1QkFBdUIsRUFBRSxrQ0FBa0M7SUFDM0QsbUJBQW1CLEVBQUUsZ0NBQWdDO0lBQ3JELGFBQWEsRUFBRSxrRUFBa0U7RUFDbkY7RUFDQTtJQUNFLGdCQUFnQjtFQUNsQiIsInNvdXJjZXNDb250ZW50IjpbIi5iYXNlIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgLyogQ2VudGVyIHRoZSBjaGlsZCBob3Jpem9udGFsbHkgKi9cclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7IC8qIENlbnRlciB0aGUgY2hpbGQgdmVydGljYWxseSAqL1xyXG4gICAgaGVpZ2h0OiAxMDB2aDsgLyogT3B0aW9uYWw6IE1ha2UgdGhlIGNvbnRhaW5lciB0YWtlIHVwIHRoZSBmdWxsIHZpZXdwb3J0IGhlaWdodCAqL1xyXG4gIH1cclxuICAuZm9ybS1sYWJlbHtcclxuICAgIGNvbG9yOiBhbGljZWJsdWU7XHJcbiAgfSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":";AAEA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;;;;ICYzDC,gCAA0G;IAAAA,uCAAuB;IAAAA,iBAAO;;;;;IAatIA,gCAA0G;IAAAA,uCAAuB;IAAAA,iBAAO;;;;;IAcxIA,gCAAsH;IAAAA,8CAA8B;IAAAA,iBAAO;;;AD9BvK,OAAM,MAAOC,eAAe;EAE1BC,YAAoBC,WAAuB,EAASC,UAAqB,EAASC,KAAY,EAASC,YAAyB;IAA5G,gBAAW,GAAXH,WAAW;IAAqB,eAAU,GAAVC,UAAU;IAAoB,UAAK,GAALC,KAAK;IAAgB,iBAAY,GAAZC,YAAY;IACjH,IAAI,CAACC,OAAO,GAAC,IAAI,CAACJ,WAAW,CAACK,KAAK,CAAC;MAClCC,KAAK,EAAC,CAAC,EAAE,EAACV,UAAU,CAACW,QAAQ,CAAC;MAC9BC,KAAK,EAAC,CAAC,EAAE,EAACZ,UAAU,CAACW,QAAQ,CAAC;MAC9BE,WAAW,EAAC,CAAC,EAAE,EAACb,UAAU,CAACW,QAAQ;KACpC,CAAC;EACJ;EACAG,KAAK;IACH,MAAMC,aAAa,GAAC,IAAI,CAACP,OAAO,CAACQ,GAAG,CAAC,aAAa,CAAC,EAAEC,KAAK;IAC1D,MAAMC,cAAc,GAAG,IAAI,CAACX,YAAY,CAACY,SAAS,CAACJ,aAAa,EAAE,KAAK,EAAE,eAAe,EAAE,OAAO,CAAC;IAClGK,OAAO,CAACC,GAAG,CAACH,cAAc,CAAC;IAC3B;IACA;IACA;IACA;IACA;EACF;;SAlBWhB,eAAe;;mBAAfA,MAAe;AAAA;;QAAfA,MAAe;EAAAoB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCX5BzB,8BAAkB;MAEgBA;QAAA,OAAU0B,WAAO;MAAA,EAAC;MAC5C1B,8BAAkB;MACsBA,qBAAK;MAAAA,iBAAQ;MAEnDA,2BAOE;MACFA,kEAAwI;MAC1IA,iBAAM;MACNA,8BAAkB;MACwBA,sBAAK;MAAAA,iBAAQ;MAEnDA,4BAOE;MACFA,oEAAwI;MAC1IA,iBAAM;MAENA,+BAAkB;MAC4BA,6BAAY;MAAAA,iBAAQ;MAEhEA,6BAOE;MACFA,oEAA2J;MAC7JA,iBAAM;MAGRA,mCAA2E;MAAAA,uBAAM;MAAAA,iBAAS;;;MA3CtFA,eAAqB;MAArBA,uCAAqB;MAYhBA,eAA6E;MAA7EA,uGAA6E;MAa3EA,eAA6E;MAA7EA,uGAA6E;MAc7EA,eAAyF;MAAzFA,mHAAyF;MAItDA,eAA4B;MAA5BA,8CAA4B","names":["Validators","i0","AddCarComponent","constructor","formBuilder","carService","route","currencyPipe","carForm","group","maker","required","model","rentalPrice","onAdd","modifiedPrice","get","value","formattedPrice","transform","console","log","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\ayushpal\\Dotnet-MiniAssignment\\Frontend\\car-rental-system\\src\\app\\components\\add-car\\add-car.component.ts","C:\\Users\\ayushpal\\Dotnet-MiniAssignment\\Frontend\\car-rental-system\\src\\app\\components\\add-car\\add-car.component.html"],"sourcesContent":["import { CurrencyPipe } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { CarService } from 'src/app/services/car.service';\n\n@Component({\n  selector: 'app-add-car',\n  templateUrl: './add-car.component.html',\n  styleUrls: ['./add-car.component.css']\n})\nexport class AddCarComponent {\n  carForm:FormGroup\n  constructor(private formBuilder:FormBuilder,private carService:CarService,private route:Router,private currencyPipe:CurrencyPipe){\n    this.carForm=this.formBuilder.group({\n      maker:['',Validators.required],\n      model:['',Validators.required],\n      rentalPrice:['',Validators.required]\n    })\n  }\n  onAdd(){\n    const modifiedPrice=this.carForm.get('rentalPrice')?.value;\n    const formattedPrice = this.currencyPipe.transform(modifiedPrice, 'USD', 'symbol-narrow', '1.2-2');\n    console.log(formattedPrice)\n    // this.carService.addCar(this.carForm.value).subscribe((res)=>{\n    //   console.log(res);\n    // },(error)=>{\n    //   console.log(error);\n    // })\n  }\n}\n","<div class=\"base\">\n    <div class=\"login\">\n      <form [formGroup]=\"carForm\" (submit)=\"onAdd()\">\n        <div class=\"mb-3\">\n          <label for=\"Maker\" class=\"form-label\">Maker</label>\n  \n          <input\n            type=\"text\"\n            class=\"form-control\"\n            id=\"Maker\"\n            placeholder=\"Enter Maker\"\n            aria-describedby=\"maker\"\n            formControlName=\"maker\"\n          />\n          <span *ngIf=\"carForm.controls['maker'].dirty && carForm.hasError('required','maker')\" style=\"color: red;\">Maker Field is required</span>\n        </div>\n        <div class=\"mb-3\">\n            <label for=\"Model\" class=\"form-label\">Model</label>\n    \n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"Model\"\n              placeholder=\"Enter Maker\"\n              aria-describedby=\"Model\"\n              formControlName=\"model\"\n            />\n            <span *ngIf=\"carForm.controls['model'].dirty && carForm.hasError('required','model')\" style=\"color: red;\">Model Field is required</span>\n          </div>\n    \n          <div class=\"mb-3\">\n            <label for=\"RentalPrice\" class=\"form-label\">Rental Price</label>\n    \n            <input\n              type=\"number\"\n              class=\"form-control\"\n              id=\"RentalPrice\"\n              placeholder=\"Enter Rental Price\"\n              aria-describedby=\"rentalPrice\"\n              formControlName=\"rentalPrice\"\n            />\n            <span *ngIf=\"carForm.controls['rentalPrice'].dirty && carForm.hasError('required','rentalPrice')\" style=\"color: red;\">Rental Price Field is required</span>\n          </div>\n    \n  \n        <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"carForm.invalid\">Submit</button>\n  \n       \n  \n        \n      </form>\n    </div>\n  </div>\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}