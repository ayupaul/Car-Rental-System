{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { DatePipe } from '@angular/common';\nimport { Component } from '@angular/core';\nlet DashboardComponent = class DashboardComponent {\n  // makers: string[]; \n  // models: string[]; \n  constructor(userService, userStoreService, carService, route) {\n    this.userService = userService;\n    this.userStoreService = userStoreService;\n    this.carService = carService;\n    this.route = route;\n    this.none = null;\n    this.selectedMaker = null;\n    this.selectedModel = null;\n    this.selectedPrice = null;\n    this.carService.getAllCars().subscribe(res => {\n      this.allCars = res;\n    }, error => {\n      console.log(error);\n    });\n    // this.makers=['Maruti Suzuki', 'Ford','Hyundai']; \n    // this.models= ['Maruti Suzuki Swift', 'Maruti Suzuki Vitara Brezza', 'Ford Mustang','Ford Escape','i10','i20'];\n  }\n\n  ngOnInit() {\n    const userPayload = this.userService.decodedToken();\n    this.userStoreService.setData(userPayload);\n    this.getRole = this.userService.getRoleFromToken();\n    this.userStoreService.setData(this.getRole);\n    const datePipe = new DatePipe('en-US');\n    this.currentDate = datePipe.transform(new Date(), 'yyyy-MM-dd');\n  }\n  onBook(carId, startDate, endDate) {\n    const startDates = new Date(startDate);\n    const endDates = new Date(endDate);\n    const carAgreementDetails = {\n      startDate: \"\",\n      endDate: \"\",\n      carId: 0\n    };\n    carAgreementDetails.startDate = startDate;\n    carAgreementDetails.endDate = endDate;\n    carAgreementDetails.carId = carId;\n    this.carService.checkBooking(carAgreementDetails).subscribe(res => {\n      if (res === true) {\n        alert(\"Car is already booked in the selected date\");\n      } else {\n        this.route.navigate([\"rental-agreement\", carId, startDate, endDate]);\n      }\n    }, error => {\n      console.log(error);\n    });\n  }\n  filterData() {\n    const filteredData = {\n      maker: null,\n      model: null,\n      rentalPrice: null\n    };\n    filteredData.maker = this.selectedMaker;\n    filteredData.model = this.selectedModel;\n    filteredData.rentalPrice = this.selectedPrice;\n    this.carService.searchCar(filteredData).subscribe(res => {\n      console.log(res);\n      this.carDetails = res;\n      this.carDetailswithDate = this.carDetails.map(car => ({\n        ...car,\n        startDate: this.startDate,\n        endDate: this.endDate\n      }));\n    }, error => {\n      console.log(error);\n    });\n  }\n  editCar(id) {\n    this.route.navigate(['edit-car', id]);\n  }\n  deleteACar(id) {\n    this.carService.deleteACar(id).subscribe(res => {\n      console.log(res);\n      alert(\"Deleted Successfully...\");\n      window.location.reload();\n    }, error => {\n      console.log(error);\n    });\n  }\n};\nDashboardComponent = __decorate([Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})], DashboardComponent);\nexport { DashboardComponent };","map":{"version":3,"mappings":"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","names":["DatePipe","Component","DashboardComponent","constructor","userService","userStoreService","carService","route","getAllCars","subscribe","res","allCars","error","console","log","ngOnInit","userPayload","decodedToken","setData","getRole","getRoleFromToken","datePipe","currentDate","transform","Date","onBook","carId","startDate","endDate","startDates","endDates","carAgreementDetails","checkBooking","alert","navigate","filterData","filteredData","maker","model","rentalPrice","selectedMaker","selectedModel","selectedPrice","searchCar","carDetails","carDetailswithDate","map","car","editCar","id","deleteACar","window","location","reload","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\ayushpal\\Dotnet-MiniAssignment\\Frontend\\car-rental-system\\src\\app\\components\\dashboard\\dashboard.component.ts"],"sourcesContent":["import { DatePipe } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CarService } from 'src/app/services/car.service';\nimport { UserServiceService } from 'src/app/services/user-service.service';\nimport { UserStoreService } from 'src/app/services/user-store.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css'],\n})\nexport class DashboardComponent implements OnInit {\n  none=null\n  carDetails:any\n  startDate:any\n  endDate:any\n  getRole:any\n  allCars:any\n  carDetailswithDate:any\n  currentDate:any\n  selectedMaker: any = null;\n  selectedModel: any = null;\n  selectedPrice: any=null;\n  newAddedCar:any\n  // makers: string[]; \n  // models: string[]; \n\n  \n\n  constructor(\n    private userService: UserServiceService,\n    private userStoreService: UserStoreService,\n    private carService:CarService,\n    private route:Router,\n  \n  ) {\n    this.carService.getAllCars().subscribe((res)=>{\n      this.allCars=res;\n    },(error)=>{\n      console.log(error);\n    })\n    // this.makers=['Maruti Suzuki', 'Ford','Hyundai']; \n    // this.models= ['Maruti Suzuki Swift', 'Maruti Suzuki Vitara Brezza', 'Ford Mustang','Ford Escape','i10','i20'];\n    \n    \n\n    \n  }\n  ngOnInit(): void {\n    const userPayload = this.userService.decodedToken();\n    this.userStoreService.setData(userPayload);\n    this.getRole=this.userService.getRoleFromToken();\n    this.userStoreService.setData(this.getRole);\n    const datePipe = new DatePipe('en-US');\n    this.currentDate=datePipe.transform(new Date(),'yyyy-MM-dd');\n    \n    \n    \n  }\n onBook(carId:any,startDate:any,endDate:any){\n  const startDates=new Date(startDate);\n  const endDates=new Date(endDate);\n  const carAgreementDetails={startDate:\"\",endDate:\"\",carId:0}\n  carAgreementDetails.startDate=startDate;\n  carAgreementDetails.endDate=endDate;\n  carAgreementDetails.carId=carId;\n  this.carService.checkBooking(carAgreementDetails).subscribe((res)=>{\n    if(res===true){\n      alert(\"Car is already booked in the selected date\");\n    }\n    else{\n      this.route.navigate([\"rental-agreement\",carId,startDate,endDate]);\n    }\n  },(error)=>{\n    console.log(error);\n  })\n  \n }\n filterData() {\n\n  const filteredData={maker:null,model:null,rentalPrice:null};\n  filteredData.maker=this.selectedMaker;\n  filteredData.model=this.selectedModel;\n  filteredData.rentalPrice=this.selectedPrice;\n  this.carService.searchCar(filteredData).subscribe((res)=>{\n   console.log(res);\n   this.carDetails=res;\n   this.carDetailswithDate=this.carDetails.map((car:any)=>({\n     ...car,startDate:this.startDate,endDate:this.endDate\n   }))\n  },(error)=>{\n   console.log(error);\n  })\n }\n editCar(id:any){\n  this.route.navigate(['edit-car',id]);\n }\n deleteACar(id:any){\n  this.carService.deleteACar(id).subscribe((res)=>{\n    console.log(res);\n    alert(\"Deleted Successfully...\")\n    window.location.reload();\n  },(error)=>{\n    console.log(error);\n  })\n }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}